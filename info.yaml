# Tiny Tapeout project information
project:
  title:        "DFF Memory"      # Project title
  author:       "dmrudait"    # Your name
  discord:      ""      # Your discord username, for communication and automatically assigning you a Tapeout role (optional)
  description:  "test TinyTapeout Project"      # One line description of what your project does
  language:     "Verilog" # other examples include SystemVerilog, Amaranth, VHDL, etc
  clock_hz:     0       # Clock frequency in Hz (or 0 if not applicable)

  # How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"          # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2, 6x2 or 8x2

  # Your top module name must start with "tt_um_". Make it unique by including your github username:
  top_module:  "tt_um_dff_mem"

  # List your project's source files here.
  # Source files must be in ./src and you must list each source file separately, one per line.
  # Don't forget to also update `PROJECT_SOURCES` in test/Makefile.
  source_files:
    - "project.v"
    

# The pinout of your project. Leave unused pins blank. DO NOT delete or add any pins.
pinout:
  # Inputs
  ui[0]: "mar[0]"        # Address bits (4-bit MAR)
  ui[1]: "mar[1]"
  ui[2]: "mar[2]"
  ui[3]: "mar[3]"
  ui[4]: "ce_n"          # Active-low Chip Enable
  ui[5]: "lr_n"          # Active-low Load RAM
  ui[6]: "clk"           # Clock input
  ui[7]: ""              # Unused input pin
  
  # Outputs
  uo[0]: "data_out[0]"   # 8-bit data_out signal (bit 0)
  uo[1]: "data_out[1]"   # Data output bit 1
  uo[2]: "data_out[2]"   # Data output bit 2
  uo[3]: "data_out[3]"   # Data output bit 3
  uo[4]: "data_out[4]"   # Data output bit 4
  uo[5]: "data_out[5]"   # Data output bit 5
  uo[6]: "data_out[6]"   # Data output bit 6
  uo[7]: "data_out[7]"   # Data output bit 7

  # Bidirectional pins
  uio[0]: "data_in[0]"   # 8-bit data_in signal (bit 0)
  uio[1]: "data_in[1]"   # Data input bit 1
  uio[2]: "data_in[2]"   # Data input bit 2
  uio[3]: "data_in[3]"   # Data input bit 3
  uio[4]: "data_in[4]"   # Data input bit 4
  uio[5]: "data_in[5]"   # Data input bit 5
  uio[6]: "data_in[6]"   # Data input bit 6
  uio[7]: "data_in[7]"   # Data input bit 7

# Do not change!
yaml_version: 6
